{"ast":null,"code":"var _jsxFileName = \"/home/masterv/Desktop/ProjectSE/tech_trivia/src/App.js\";\nimport React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation.js';\nimport 'tachyons';\nimport Logo from './Components/Logo/Logo.js';\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js';\nimport Register from './Components/Register/Register.js';\nimport Home from './Components/Home/Home.js';\nimport QuizCreate from './Components/QuizCreate/QuizCreate.js'; //configuration file for particles effect\n\nconst particlesConfig = {\n  particles: {\n    number: {\n      value: 120,\n      density: {\n        enable: true,\n        value_are: 300\n      }\n    }\n  }\n}; ///Main application class\n\nclass App extends React.Component {\n  //constructor for main app class\n  constructor() {\n    super();\n\n    this.getUser = data => {\n      this.setState({\n        user: {\n          id: data.id,\n          username: data.username,\n          email: data.email,\n          score: data.score\n        }\n      });\n    };\n\n    this.setQuestions = quests => {\n      this.setState({\n        questions: quests\n      });\n    };\n\n    this.onRouteChange = newRoute => {\n      console.log(newRoute);\n\n      if (newRoute === 'signout') {\n        this.setState({\n          logedIn: false\n        });\n        this.setState({\n          route: 'signIn'\n        });\n        this.setState({\n          user: {\n            id: '',\n            name: '',\n            email: '',\n            score: 0\n          }\n        });\n      } else if (newRoute === 'home') {\n        this.setState({\n          logedIn: true\n        });\n        this.setState({\n          route: 'home'\n        });\n      } else {\n        this.setState({\n          route: newRoute\n        });\n      }\n    };\n\n    this.state = {\n      route: 'signIn',\n      logedIn: false,\n      questions: [],\n      endQuiz: false,\n      user: {\n        id: '',\n        username: '',\n        email: '',\n        score: 0\n      }\n    };\n  } //function used to get user data\n\n\n  render() {\n    //choosing the current View based on current route state\n    let dispElem = React.createElement(SignIn, {\n      getUser: this.getUser,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    });\n\n    switch (this.state.route) {\n      case 'signIn':\n        dispElem = React.createElement(SignIn, {\n          getUser: this.getUser,\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105\n          },\n          __self: this\n        });\n        break;\n\n      case 'register':\n        dispElem = React.createElement(Register, {\n          getUser: this.getUser,\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 108\n          },\n          __self: this\n        });\n        break;\n\n      case 'home':\n        dispElem = React.createElement(Home, {\n          user: this.state.user,\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111\n          },\n          __self: this\n        });\n        break;\n\n      case 'quizCreate':\n        dispElem = React.createElement(QuizCreate, {\n          onRouteChange: this.onRouteChange,\n          question: this.state.questions,\n          getQuestion: this.setQuestions,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114\n          },\n          __self: this\n        });\n        break;\n\n      default:\n        dispElem = React.createElement(SignIn, {\n          getUser: this.getUser,\n          onRouteChange: this.onRouteChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117\n          },\n          __self: this\n        });\n    } ///function that displays the app\n    //includes static elements(Particles, Navigatio,Logo) and also the dispElem var that changes depending on the current view\n\n\n    return React.createElement(\"div\", {\n      className: \"App\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 124\n      },\n      __self: this\n    }, React.createElement(Particles, {\n      className: \"particles\",\n      params: particlesConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125\n      },\n      __self: this\n    }), React.createElement(Navigation, {\n      isLogedIn: this.state.logedIn,\n      onRouteChange: this.onRouteChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(Logo, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129\n      },\n      __self: this\n    }), dispElem);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/masterv/Desktop/ProjectSE/tech_trivia/src/App.js"],"names":["React","Navigation","Logo","Particles","SignIn","Register","Home","QuizCreate","particlesConfig","particles","number","value","density","enable","value_are","App","Component","constructor","getUser","data","setState","user","id","username","email","score","setQuestions","quests","questions","onRouteChange","newRoute","console","log","logedIn","route","name","state","endQuiz","render","dispElem"],"mappings":"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","sourcesContent":["import React from 'react';\nimport './App.css';\nimport Navigation from './Components/Navigation/Navigation.js'\nimport 'tachyons';\nimport Logo from './Components/Logo/Logo.js'\nimport Particles from 'react-particles-js';\nimport SignIn from './Components/SignIn/SignIn.js'\nimport Register from './Components/Register/Register.js'\nimport Home from './Components/Home/Home.js'\nimport QuizCreate from './Components/QuizCreate/QuizCreate.js'\n\n\n\n\n//configuration file for particles effect\nconst particlesConfig={\n  particles:{\n    number:{\n      value:120,\n      density:{\n        enable:true,\n        value_are:300\n      }\n\n      }\n  }\n  \n}\n\n\n\n\n\n\n///Main application class\n\nclass App extends React.Component {\n \n\n //constructor for main app class\nconstructor(){\n  super();\n  this.state={\n    route:'signIn',\n    logedIn:false,\n    questions:[],\n    endQuiz:false,\n\n     user: {\n        id: '',\n        username: '',\n        email: '',\n        score: 0\n      }\n\n\n  }\n\n}\n\n\n\n//function used to get user data\ngetUser = (data) => {\n    this.setState({user: {\n      id: data.id,\n      username: data.username,\n      email: data.email,\n      score: data.score,\n    }})\n  }\n\nsetQuestions=(quests)=>{\n  this.setState({questions:quests})\n}\n\n\n///function that changes the current route state\n//it also changes the state variables asociated with that route\nonRouteChange = (newRoute)=>{\n  console.log(newRoute)\n  if(newRoute==='signout'){\n    this.setState({logedIn: false})\n    this.setState({route: 'signIn'});\n    this.setState({user: {\n        id: '',\n        name: '',\n        email: '',\n        score: 0\n      }})\n  }\n  else if (newRoute === 'home') {\n    this.setState({logedIn: true})\n    this.setState({route: 'home'})\n  }else {\n    this.setState({route: newRoute});\n  }\n}\n\nrender(){\n  //choosing the current View based on current route state\n  let dispElem=<SignIn getUser={this.getUser} onRouteChange={this.onRouteChange}/>;\n    switch(this.state.route){\n      case 'signIn':\n        dispElem=<SignIn getUser={this.getUser} onRouteChange={this.onRouteChange}/>\n        break;\n      case 'register':\n        dispElem=<Register getUser={this.getUser} onRouteChange={this.onRouteChange}/>\n        break;\n      case 'home':\n        dispElem=<Home user={this.state.user} onRouteChange={this.onRouteChange}/>\n        break;\n      case 'quizCreate':\n        dispElem=<QuizCreate  onRouteChange={this.onRouteChange} question={this.state.questions} getQuestion={this.setQuestions}/>\n        break;\n      default:\n        dispElem=<SignIn getUser={this.getUser} onRouteChange={this.onRouteChange}/>\n    }\n\n    ///function that displays the app\n    //includes static elements(Particles, Navigatio,Logo) and also the dispElem var that changes depending on the current view\n  return (\n    \n    <div className=\"App\">\n      <Particles className=\"particles\" params={particlesConfig} /> \n     \n      <Navigation isLogedIn={this.state.logedIn} onRouteChange={this.onRouteChange} />\n      \n      <Logo />\n\n      {dispElem}\n      \n\n    </div>\n  );\n}\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}