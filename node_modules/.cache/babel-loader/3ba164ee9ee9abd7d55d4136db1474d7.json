{"ast":null,"code":"var _jsxFileName = \"/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/QuizCreate/QuizCreate.js\";\nimport React from 'react';\nimport StartScreen from './StartScreen.js';\nimport Quiz from './Quiz.js';\n\nclass QuizCreate extends React.Component {\n  //data variables used to store questions and the score the user has obtained from the quiz\n  constructor(props) {\n    super(props);\n\n    this.BinaryQuiz = event => {\n      console.log('yes');\n      fetch('http://localhost:3000/binaryquiz').then(response => response.json()).then(response => {\n        this.setState({\n          questions: response\n        });\n        console.log(response);\n      });\n      this.setState({\n        startQuiz: true\n      });\n    };\n\n    this.cQuiz = event => {\n      console.log('yes');\n      fetch('http://localhost:3000/cquiz').then(response => response.json()).then(response => {\n        this.setState({\n          questions: response\n        });\n        console.log(response);\n      });\n      this.setState({\n        startQuiz: true\n      });\n    };\n\n    this.state = {\n      startQuiz: false,\n      generatedScore: 0,\n      questions: []\n    };\n  }\n\n  render() {\n    let goOn;\n\n    if (this.props.questions.length) {\n      goOn = React.createElement(Quiz, {\n        questions: this.state.questions,\n        onRouteChange: this.props.onRouteChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      });\n    } else {\n      goOn = React.createElement(StartScreen, {\n        BinaryQuiz: this.BinaryQuiz,\n        CQuiz: this.cQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48\n      },\n      __self: this\n    }, goOn);\n  }\n\n}\n\nexport default QuizCreate;","map":{"version":3,"sources":["/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/QuizCreate/QuizCreate.js"],"names":["React","StartScreen","Quiz","QuizCreate","Component","constructor","props","BinaryQuiz","event","console","log","fetch","then","response","json","setState","questions","startQuiz","cQuiz","state","generatedScore","render","goOn","length","onRouteChange"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAIA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AACvC;AACCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUrBC,UAVqB,GAUPC,KAAD,IAAS;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CAA0CC,IAA1C,CAA+CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA3D,EAA4EF,IAA5E,CAAiFC,QAAQ,IAAE;AAAC,aAAKE,QAAL,CAAc;AAACC,UAAAA,SAAS,EAACH;AAAX,SAAd;AAC3FJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,OAFA;AAGA,WAAKE,QAAL,CAAc;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,KAhBoB;;AAAA,SAkBrBC,KAlBqB,GAkBZV,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtD,EAAuEF,IAAvE,CAA4EC,QAAQ,IAAE;AAAC,aAAKE,QAAL,CAAc;AAACC,UAAAA,SAAS,EAACH;AAAX,SAAd;AACtFJ,QAAAA,OAAO,CAACC,GAAR,CAAYG,QAAZ;AACD,OAFA;AAGA,WAAKE,QAAL,CAAc;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,KAxBoB;;AAEjB,SAAKE,KAAL,GAAW;AACVF,MAAAA,SAAS,EAAC,KADA;AAEVG,MAAAA,cAAc,EAAC,CAFL;AAGVJ,MAAAA,SAAS,EAAC;AAHA,KAAX;AAMD;;AAqBHK,EAAAA,MAAM,GAAE;AACP,QAAIC,IAAJ;;AAEA,QAAI,KAAKhB,KAAL,CAAWU,SAAX,CAAqBO,MAAzB,EAAgC;AAC9BD,MAAAA,IAAI,GAAC,oBAAC,IAAD;AAAM,QAAA,SAAS,EAAE,KAAKH,KAAL,CAAWH,SAA5B;AAAuC,QAAA,aAAa,EAAE,KAAKV,KAAL,CAAWkB,aAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AACD,KAFD,MAEK;AACJF,MAAAA,IAAI,GAAC,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKf,UAA9B;AAA0C,QAAA,KAAK,EAAE,KAAKW,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AACA;;AAED,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACII,IADJ,CADD;AAKA;;AA7CuC;;AAiDxC,eAAgBnB,UAAhB","sourcesContent":["import React from 'react';\nimport StartScreen from './StartScreen.js'\nimport Quiz from './Quiz.js'\n\n\n\nclass QuizCreate extends React.Component{\n\t//data variables used to store questions and the score the user has obtained from the quiz\n\t constructor(props) {\n    super(props);\n    this.state={\n    \tstartQuiz:false,\n    \tgeneratedScore:0,\n    \tquestions:[]\n    }\n    \n  }\n\nBinaryQuiz = (event)=>{\n\tconsole.log('yes')\n\tfetch('http://localhost:3000/binaryquiz').then(response => response.json()).then(response=>{this.setState({questions:response})\n\t\tconsole.log(response)\n});\n\tthis.setState({startQuiz:true})\n}\n\ncQuiz = (event)=>{\n\tconsole.log('yes')\n\tfetch('http://localhost:3000/cquiz').then(response => response.json()).then(response=>{this.setState({questions:response})\n\t\tconsole.log(response)\n});\n\tthis.setState({startQuiz:true})\n}\n\n\n   \n\nrender(){\n\tlet goOn;\n\n\tif (this.props.questions.length){\n\t\t\tgoOn=<Quiz questions={this.state.questions} onRouteChange={this.props.onRouteChange} />\n\t}else{\n\t\tgoOn=<StartScreen BinaryQuiz={this.BinaryQuiz} CQuiz={this.cQuiz}/>;\n\t}\n\n\treturn(\n\t\t<div>\n    \t{goOn}\n    \t</div>\n);\n}\n\n}\n\nexport  default QuizCreate;"]},"metadata":{},"sourceType":"module"}