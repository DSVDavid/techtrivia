{"ast":null,"code":"var _jsxFileName = \"/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/Register/Register.js\";\nimport React from 'react';\n\nclass Register extends React.Component {\n  //state variables that include user data\n  //also two state variables that check if the credidentials are empty or the email already exists\n  constructor(props) {\n    super(props);\n\n    this.onNameChange = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onEmailChange = event => {\n      this.setState({\n        email: event.target.value\n      });\n    };\n\n    this.onPasswordChange = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onSubmitSignUp = event => {\n      event.preventDefault();\n\n      if (this.state.email !== '' && this.state.username !== '' && this.state.password == '') {\n        fetch('http://localhost:3000/register', {\n          method: 'post',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            email: this.state.email,\n            password: this.state.password,\n            username: this.state.username\n          })\n        }).then(response => response.json()).then(user => {\n          if (user === 'unable to register') {\n            this.setState({\n              emailExist: true\n            });\n          } else if (user) {\n            this.props.getUser(user);\n            console.log(user);\n            this.setState({\n              emailExist: false\n            });\n            this.props.onRouteChange('home');\n          }\n        });\n      } else {\n        this.setState({\n          emptyCreds: true\n        });\n      }\n    };\n\n    this.state = {\n      email: '',\n      password: '',\n      username: '',\n      emailExist: false,\n      emptyCreds: false\n    };\n  } //functions that change the value of state variables when new input is given\n\n\n  render() {\n    let warnLog;\n\n    if (this.state.emailExist === true) {\n      warnLog = React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }, \"Email already used!\");\n    } else if (this.state.emptyCreds === true) {\n      warnLog = React.createElement(\"label\", {\n        className: \"db fw6 lh-copy f6\",\n        style: {\n          color: 'red'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"Please enter all fields!!\");\n    } else warnLog = React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    });\n\n    return React.createElement(\"article\", {\n      className: \"pa4 black-80\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      action: \"sign-up_submit\",\n      method: \"POST\",\n      acceptCharset: \"utf-8\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86\n      },\n      __self: this\n    }, React.createElement(\"fieldset\", {\n      id: \"sign_up\",\n      className: \"ba b--transparent ph0 mh0\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(\"legend\", {\n      className: \"ph0 mh0 fw6 clip\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }, \"Sign Up\"), React.createElement(\"div\", {\n      className: \"mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"email-address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, \"Username\"), React.createElement(\"input\", {\n      className: \"pa2 input-reset ba bg-transparent w-100 measure\",\n      type: \"text\",\n      name: \"name\",\n      id: \"name\",\n      onChange: this.onNameChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"email-address\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97\n      },\n      __self: this\n    }, \"Email address\"), React.createElement(\"input\", {\n      className: \"pa2 input-reset ba bg-transparent w-100 measure\",\n      type: \"email\",\n      name: \"email-address\",\n      id: \"email-address\",\n      onChange: this.onEmailChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    })), React.createElement(\"div\", {\n      className: \"mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      className: \"db fw6 lh-copy f6\",\n      htmlFor: \"password\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, \"Password\"), React.createElement(\"input\", {\n      className: \"b pa2 input-reset ba bg-transparent\",\n      type: \"password\",\n      name: \"password\",\n      id: \"password\",\n      onChange: this.onPassChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104\n      },\n      __self: this\n    }))), React.createElement(\"div\", {\n      className: \"mt3\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, React.createElement(\"input\", {\n      className: \"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\",\n      type: \"submit\",\n      value: \"Sign Up\",\n      onClick: this.onSubmitSignUp,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    })), warnLog));\n  }\n\n}\n\nexport default Register;","map":{"version":3,"sources":["/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/Register/Register.js"],"names":["React","Register","Component","constructor","props","onNameChange","event","setState","username","target","value","onEmailChange","email","onPasswordChange","password","onSubmitSignUp","preventDefault","state","fetch","method","headers","body","JSON","stringify","then","response","json","user","emailExist","getUser","console","log","onRouteChange","emptyCreds","render","warnLog","color","onPassChange"],"mappings":"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","sourcesContent":["import React from 'react';\n\n\n\n\nclass Register extends React.Component{\n  //state variables that include user data\n  //also two state variables that check if the credidentials are empty or the email already exists\n\t constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      username: '',\n      emailExist:false,\n      emptyCreds:false\n    }\n  }\n\n\n\n  //functions that change the value of state variables when new input is given\n\n    onNameChange = (event) => {\n    this.setState({username: event.target.value})\n  }\n\n  onEmailChange = (event) => {\n    this.setState({email: event.target.value})\n  }\n\n  onPasswordChange = (event) => {\n    this.setState({password: event.target.value})\n  }\n\n  //sends posts request to the api on the register end-point\n  //checks first if the state variables are empty \n  //also checks if the response indicates the email is already registered\n  onSubmitSignUp = (event) => {\n    event.preventDefault();\n    if(this.state.email!==''&& this.state.username!==''&& this.state.password==''){\n    \n    fetch('http://localhost:3000/register', {\n\n      method: 'post',\n      headers: {'Content-Type': 'application/json'},\n      body: JSON.stringify({\n        email: this.state.email,\n        password: this.state.password,\n        username: this.state.username\n      })\n    })\n      .then(response => response.json())\n      .then(user => {\n        if (user==='unable to register') {\n          this.setState({emailExist:true})\n\n        }else if(user){\n          this.props.getUser(user)\n          console.log(user)\n          this.setState({emailExist:false})\n          this.props.onRouteChange('home');\n        }\n      })\n    }else{\n      this.setState({emptyCreds:true});\n    }\n  }\n\n   \n\nrender(){\n  let warnLog;\n  if(this.state.emailExist===true){\n    warnLog= <label className=\"db fw6 lh-copy f6\" style={{color:'red'}} >Email already used!</label>\n  }else if(this.state.emptyCreds===true){\n    warnLog= <label className=\"db fw6 lh-copy f6\" style={{color:'red'}} >Please enter all fields!!</label>\n  }else\n    warnLog=<div></div>\n\n\n\treturn(\n\n\n\t<article className=\"pa4 black-80\">\n  <form action=\"sign-up_submit\" method=\"POST\" acceptCharset=\"utf-8\" >\n    <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\n      <legend className=\"ph0 mh0 fw6 clip\">Sign Up</legend>\n       <div className=\"mt3\">\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Username</label>\n        <input className=\"pa2 input-reset ba bg-transparent w-100 measure\" type=\"text\" name=\"name\"  id=\"name\" \n        onChange={this.onNameChange}\n        />\n      </div>\n\n      <div className=\"mt3\">\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">Email address</label>\n        <input className=\"pa2 input-reset ba bg-transparent w-100 measure\" type=\"email\" name=\"email-address\"  id=\"email-address\"\n        onChange={this.onEmailChange}\n         />\n      </div>\n      <div className=\"mt3\">\n        <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">Password</label>\n        <input className=\"b pa2 input-reset ba bg-transparent\" type=\"password\" name=\"password\"  id=\"password\" \n        onChange={this.onPassChange}\n        />\n      </div>\n    </fieldset>\n    <div className=\"mt3\"><input className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6\" type=\"submit\" value=\"Sign Up\" \n    onClick={this.onSubmitSignUp}\n    /></div>\n    {warnLog}\n  </form>\n</article>\n\n);\n}\n\n}\n\nexport  default Register;"]},"metadata":{},"sourceType":"module"}