{"ast":null,"code":"var _jsxFileName = \"/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/QuizCreate/QuizCreate.js\";\nimport React from 'react';\nimport Tilt from 'react-tilt';\nimport StartScreen from './StartScreen.js';\n\nclass QuizCreate extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.BinaryQuiz = event => {\n      console.log('yes');\n      fetch('http://localhost:3000/binaryquiz').then(response => response.json()).then(response => this.setState({\n        questions: response\n      }));\n      this.setState({\n        startQuiz: true\n      });\n    };\n\n    this.cQuiz = event => {\n      console.log('yes');\n      fetch('http://localhost:3000/cquiz').then(response => response.json()).then(response => this.setState({\n        questions: response\n      }));\n      this.setState({\n        startQuiz: true\n      });\n    };\n\n    this.state = {\n      startQuiz: false,\n      generatedScore: 0,\n      questions: []\n    };\n  }\n\n  render() {\n    let goOn;\n\n    if (this.startQuiz === true && this.questions.length) {\n      goOn = React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }, \"questions\"));\n    } else {\n      goOn = React.createElement(StartScreen, {\n        BinaryQuiz: this.BinaryQuiz,\n        CQuiz: this.cQuiz,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, goOn);\n  }\n\n}\n\nexport default QuizCreate;","map":{"version":3,"sources":["/home/masterv/Desktop/ProjectSE/tech_trivia/src/Components/QuizCreate/QuizCreate.js"],"names":["React","Tilt","StartScreen","QuizCreate","Component","constructor","props","BinaryQuiz","event","console","log","fetch","then","response","json","setState","questions","startQuiz","cQuiz","state","generatedScore","render","goOn","length"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,WAAP,MAAwB,kBAAxB;;AAKA,MAAMC,UAAN,SAAyBH,KAAK,CAACI,SAA/B,CAAwC;AAEtCC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;;AADiB,SAUrBC,UAVqB,GAUPC,KAAD,IAAS;AACrBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,MAAAA,KAAK,CAAC,kCAAD,CAAL,CAA0CC,IAA1C,CAA+CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAA3D,EAA4EF,IAA5E,CAAiFC,QAAQ,IAAE,KAAKE,QAAL,CAAc;AAACC,QAAAA,SAAS,EAACH;AAAX,OAAd,CAA3F;AACA,WAAKE,QAAL,CAAc;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,KAdoB;;AAAA,SAgBrBC,KAhBqB,GAgBZV,KAAD,IAAS;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ;AACAC,MAAAA,KAAK,CAAC,6BAAD,CAAL,CAAqCC,IAArC,CAA0CC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAAtD,EAAuEF,IAAvE,CAA4EC,QAAQ,IAAE,KAAKE,QAAL,CAAc;AAACC,QAAAA,SAAS,EAACH;AAAX,OAAd,CAAtF;AACA,WAAKE,QAAL,CAAc;AAACE,QAAAA,SAAS,EAAC;AAAX,OAAd;AACA,KApBoB;;AAEjB,SAAKE,KAAL,GAAW;AACVF,MAAAA,SAAS,EAAC,KADA;AAEVG,MAAAA,cAAc,EAAC,CAFL;AAGVJ,MAAAA,SAAS,EAAC;AAHA,KAAX;AAMD;;AAiBHK,EAAAA,MAAM,GAAE;AACP,QAAIC,IAAJ;;AAEA,QAAI,KAAKL,SAAL,KAAkB,IAAlB,IAA0B,KAAKD,SAAL,CAAeO,MAA7C,EAAoD;AAClDD,MAAAA,IAAI,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAL,CAAL;AACD,KAFD,MAEK;AACJA,MAAAA,IAAI,GAAC,oBAAC,WAAD;AAAa,QAAA,UAAU,EAAE,KAAKf,UAA9B;AAA0C,QAAA,KAAK,EAAE,KAAKW,KAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAL;AACA;;AAED,WACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACII,IADJ,CADD;AAKA;;AAzCuC;;AA6CxC,eAAgBnB,UAAhB","sourcesContent":["import React from 'react';\nimport Tilt from 'react-tilt'\nimport StartScreen from './StartScreen.js'\n\n\n\n\nclass QuizCreate extends React.Component{\n\n\t constructor(props) {\n    super(props);\n    this.state={\n    \tstartQuiz:false,\n    \tgeneratedScore:0,\n    \tquestions:[]\n    }\n    \n  }\n\nBinaryQuiz = (event)=>{\n\tconsole.log('yes')\n\tfetch('http://localhost:3000/binaryquiz').then(response => response.json()).then(response=>this.setState({questions:response}));\n\tthis.setState({startQuiz:true})\n}\n\ncQuiz = (event)=>{\n\tconsole.log('yes')\n\tfetch('http://localhost:3000/cquiz').then(response => response.json()).then(response=>this.setState({questions:response}));\n\tthis.setState({startQuiz:true})\n}\n\n\n   \n\nrender(){\n\tlet goOn;\n\n\tif (this.startQuiz ===true && this.questions.length){\n\t\t\tgoOn=<div><p>questions</p></div>\n\t}else{\n\t\tgoOn=<StartScreen BinaryQuiz={this.BinaryQuiz} CQuiz={this.cQuiz}/>;\n\t}\n\n\treturn(\n\t\t<div>\n    \t{goOn}\n    \t</div>\n);\n}\n\n}\n\nexport  default QuizCreate;"]},"metadata":{},"sourceType":"module"}